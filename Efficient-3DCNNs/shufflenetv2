DataParallel(
  (module): ShuffleNetV2(
    (conv1): Sequential(
      (0): Conv3d(3, 24, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1), bias=False)
      (1): BatchNorm3d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (maxpool): MaxPool3d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (features): Sequential(
      (0): InvertedResidual(
        (banch1): Sequential(
          (0): Conv3d(24, 24, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1), groups=24, bias=False)
          (1): BatchNorm3d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): Conv3d(24, 58, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (3): BatchNorm3d(58, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
        )
        (banch2): Sequential(
          (0): Conv3d(24, 58, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (1): BatchNorm3d(58, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv3d(58, 58, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1), groups=58, bias=False)
          (4): BatchNorm3d(58, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): Conv3d(58, 58, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (6): BatchNorm3d(58, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (7): ReLU(inplace=True)
        )
      )
      (1): InvertedResidual(
        (banch2): Sequential(
          (0): Conv3d(58, 58, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (1): BatchNorm3d(58, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv3d(58, 58, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), groups=58, bias=False)
          (4): BatchNorm3d(58, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): Conv3d(58, 58, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (6): BatchNorm3d(58, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (7): ReLU(inplace=True)
        )
      )
      (2): InvertedResidual(
        (banch2): Sequential(
          (0): Conv3d(58, 58, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (1): BatchNorm3d(58, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv3d(58, 58, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), groups=58, bias=False)
          (4): BatchNorm3d(58, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): Conv3d(58, 58, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (6): BatchNorm3d(58, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (7): ReLU(inplace=True)
        )
      )
      (3): InvertedResidual(
        (banch2): Sequential(
          (0): Conv3d(58, 58, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (1): BatchNorm3d(58, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv3d(58, 58, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), groups=58, bias=False)
          (4): BatchNorm3d(58, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): Conv3d(58, 58, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (6): BatchNorm3d(58, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (7): ReLU(inplace=True)
        )
      )
      (4): InvertedResidual(
        (banch1): Sequential(
          (0): Conv3d(116, 116, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1), groups=116, bias=False)
          (1): BatchNorm3d(116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): Conv3d(116, 116, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (3): BatchNorm3d(116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
        )
        (banch2): Sequential(
          (0): Conv3d(116, 116, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (1): BatchNorm3d(116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv3d(116, 116, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1), groups=116, bias=False)
          (4): BatchNorm3d(116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): Conv3d(116, 116, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (6): BatchNorm3d(116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (7): ReLU(inplace=True)
        )
      )
      (5): InvertedResidual(
        (banch2): Sequential(
          (0): Conv3d(116, 116, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (1): BatchNorm3d(116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv3d(116, 116, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), groups=116, bias=False)
          (4): BatchNorm3d(116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): Conv3d(116, 116, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (6): BatchNorm3d(116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (7): ReLU(inplace=True)
        )
      )
      (6): InvertedResidual(
        (banch2): Sequential(
          (0): Conv3d(116, 116, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (1): BatchNorm3d(116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv3d(116, 116, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), groups=116, bias=False)
          (4): BatchNorm3d(116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): Conv3d(116, 116, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (6): BatchNorm3d(116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (7): ReLU(inplace=True)
        )
      )
      (7): InvertedResidual(
        (banch2): Sequential(
          (0): Conv3d(116, 116, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (1): BatchNorm3d(116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv3d(116, 116, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), groups=116, bias=False)
          (4): BatchNorm3d(116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): Conv3d(116, 116, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (6): BatchNorm3d(116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (7): ReLU(inplace=True)
        )
      )
      (8): InvertedResidual(
        (banch2): Sequential(
          (0): Conv3d(116, 116, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (1): BatchNorm3d(116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv3d(116, 116, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), groups=116, bias=False)
          (4): BatchNorm3d(116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): Conv3d(116, 116, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (6): BatchNorm3d(116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (7): ReLU(inplace=True)
        )
      )
      (9): InvertedResidual(
        (banch2): Sequential(
          (0): Conv3d(116, 116, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (1): BatchNorm3d(116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv3d(116, 116, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), groups=116, bias=False)
          (4): BatchNorm3d(116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): Conv3d(116, 116, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (6): BatchNorm3d(116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (7): ReLU(inplace=True)
        )
      )
      (10): InvertedResidual(
        (banch2): Sequential(
          (0): Conv3d(116, 116, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (1): BatchNorm3d(116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv3d(116, 116, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), groups=116, bias=False)
          (4): BatchNorm3d(116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): Conv3d(116, 116, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (6): BatchNorm3d(116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (7): ReLU(inplace=True)
        )
      )
      (11): InvertedResidual(
        (banch2): Sequential(
          (0): Conv3d(116, 116, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (1): BatchNorm3d(116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv3d(116, 116, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), groups=116, bias=False)
          (4): BatchNorm3d(116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): Conv3d(116, 116, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (6): BatchNorm3d(116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (7): ReLU(inplace=True)
        )
      )
      (12): InvertedResidual(
        (banch1): Sequential(
          (0): Conv3d(232, 232, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1), groups=232, bias=False)
          (1): BatchNorm3d(232, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): Conv3d(232, 232, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (3): BatchNorm3d(232, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): ReLU(inplace=True)
        )
        (banch2): Sequential(
          (0): Conv3d(232, 232, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (1): BatchNorm3d(232, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv3d(232, 232, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1), groups=232, bias=False)
          (4): BatchNorm3d(232, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): Conv3d(232, 232, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (6): BatchNorm3d(232, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (7): ReLU(inplace=True)
        )
      )
      (13): InvertedResidual(
        (banch2): Sequential(
          (0): Conv3d(232, 232, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (1): BatchNorm3d(232, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv3d(232, 232, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), groups=232, bias=False)
          (4): BatchNorm3d(232, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): Conv3d(232, 232, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (6): BatchNorm3d(232, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (7): ReLU(inplace=True)
        )
      )
      (14): InvertedResidual(
        (banch2): Sequential(
          (0): Conv3d(232, 232, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (1): BatchNorm3d(232, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv3d(232, 232, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), groups=232, bias=False)
          (4): BatchNorm3d(232, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): Conv3d(232, 232, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (6): BatchNorm3d(232, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (7): ReLU(inplace=True)
        )
      )
      (15): InvertedResidual(
        (banch2): Sequential(
          (0): Conv3d(232, 232, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (1): BatchNorm3d(232, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv3d(232, 232, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), groups=232, bias=False)
          (4): BatchNorm3d(232, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (5): Conv3d(232, 232, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
          (6): BatchNorm3d(232, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (7): ReLU(inplace=True)
        )
      )
    )
    (conv_last): Sequential(
      (0): Conv3d(464, 1024, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
      (1): BatchNorm3d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (classifier): Sequential(
      (0): Dropout(p=0.2, inplace=False)
      (1): Linear(in_features=1024, out_features=9, bias=True)
    )
  )
)
Total number of trainable parameters:  1308405
Total number of FLOPs:  193706144.0
